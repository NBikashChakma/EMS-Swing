
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Bikash
 */
public class Payroll extends javax.swing.JFrame {

    private static final String username = "root";
    private static final String password = "3434!Natun?!%@$#";
    private static final String dataConn = "jdbc:mysql://localhost:3306/ems31?autoReconnect=true&useSSL=false";

    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int q, i, Payroll_ID, deleteItem;
    DefaultTableModel d;

    public Payroll() {
        initComponents();
        upDateDB();
    }
//**************************************FUNCTION START*******************************************************//

    public void upDateDB() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("select * from Payroll");

            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();

            q = stData.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel) txtPayroll_Table.getModel();
            RecordTable.setRowCount(0);

            while (rs.next()) {
                Vector columnData = new Vector();

                for (i = 1; i <= q; i++) {

                    columnData.add(rs.getString("Payroll_ID"));
                    columnData.add(rs.getString("Emp_ID"));
                    columnData.add(rs.getString("Job_ID"));
                    columnData.add(rs.getString("Salary_ID"));
                    columnData.add(rs.getString("Report"));
                }
                RecordTable.addRow(columnData);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    //**************************************FUNCTION END*******************************************************//
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPay_ID = new javax.swing.JTextField();
        txtEmp_ID = new javax.swing.JTextField();
        txtJob_ID = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtSalary_ID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtReport = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        txtUpdateData3 = new javax.swing.JButton();
        txtAddNew3 = new javax.swing.JButton();
        txtReset3 = new javax.swing.JButton();
        txtPrint3 = new javax.swing.JButton();
        txtExit = new javax.swing.JButton();
        txtDelete3 = new javax.swing.JButton();
        txtEmployee = new javax.swing.JButton();
        txtSalary = new javax.swing.JButton();
        txtJob_Dept = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPayroll_Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PayRoll Table");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pay_ID (P.K)");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Emp_ID (F.k)");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Job_ID (F.k)");

        txtPay_ID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtEmp_ID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtJob_ID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Salary_ID (F.K)");

        txtSalary_ID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Report");

        txtReport.setColumns(20);
        txtReport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtReport.setRows(5);
        jScrollPane2.setViewportView(txtReport);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPay_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmp_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtJob_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSalary_ID, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPay_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtJob_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtEmp_ID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtSalary_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(51, 153, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));

        txtUpdateData3.setBackground(new java.awt.Color(0, 0, 255));
        txtUpdateData3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtUpdateData3.setForeground(new java.awt.Color(255, 255, 255));
        txtUpdateData3.setText("Update Data");
        txtUpdateData3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateDataActionPerformed(evt);
            }
        });

        txtAddNew3.setBackground(new java.awt.Color(0, 0, 255));
        txtAddNew3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtAddNew3.setForeground(new java.awt.Color(255, 255, 255));
        txtAddNew3.setText("Add New");
        txtAddNew3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddNewActionPerformed(evt);
            }
        });

        txtReset3.setBackground(new java.awt.Color(0, 0, 255));
        txtReset3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtReset3.setForeground(new java.awt.Color(255, 255, 255));
        txtReset3.setText("Reset");
        txtReset3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResetActionPerformed(evt);
            }
        });

        txtPrint3.setBackground(new java.awt.Color(0, 0, 255));
        txtPrint3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtPrint3.setForeground(new java.awt.Color(255, 255, 255));
        txtPrint3.setText("Print");
        txtPrint3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrintActionPerformed(evt);
            }
        });

        txtExit.setBackground(new java.awt.Color(255, 51, 51));
        txtExit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtExit.setForeground(new java.awt.Color(255, 255, 255));
        txtExit.setText("Exit");
        txtExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExitActionPerformed(evt);
            }
        });

        txtDelete3.setBackground(new java.awt.Color(0, 0, 255));
        txtDelete3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDelete3.setForeground(new java.awt.Color(255, 255, 255));
        txtDelete3.setText("Delete");
        txtDelete3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeleteActionPerformed(evt);
            }
        });

        txtEmployee.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtEmployee.setText("Employee");
        txtEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployeeActionPerformed(evt);
            }
        });

        txtSalary.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtSalary.setText("Salay");
        txtSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalaryActionPerformed(evt);
            }
        });

        txtJob_Dept.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtJob_Dept.setText("Job Dept");
        txtJob_Dept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJob_DeptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAddNew3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployee))
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUpdateData3)
                    .addComponent(txtJob_Dept, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrint3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(txtReset3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDelete3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddNew3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUpdateData3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrint3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReset3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDelete3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJob_Dept, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtExit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Payroll");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        txtPayroll_Table.setBackground(new java.awt.Color(51, 153, 255));
        txtPayroll_Table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPayroll_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pay_ID", "Emp_ID", "Job_ID", "Salary_ID", "Report"
            }
        ));
        txtPayroll_Table.setRowHeight(25);
        txtPayroll_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPayroll_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(txtPayroll_Table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1330, 680));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private JFrame frame;
    private void txtExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExitActionPerformed
        // TODO add your handling code here:
        frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "confirm if you want to exit", "Employee Management System", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            //System.exit(0);
            Admin_Login L = new Admin_Login();
            this.setVisible(false);
            L.setVisible(true);
        }
    }//GEN-LAST:event_txtExitActionPerformed

    private void txtPayroll_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPayroll_TableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) txtPayroll_Table.getModel();
        int SelectedRows = txtPayroll_Table.getSelectedRow();

        txtEmp_ID.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        txtJob_ID.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
        txtSalary_ID.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        txtReport.setText(RecordTable.getValueAt(SelectedRows, 4).toString());
    }//GEN-LAST:event_txtPayroll_TableMouseClicked

    private void txtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) txtPayroll_Table.getModel();
        int SelectedRows = txtPayroll_Table.getSelectedRow();

        try {
            Payroll_ID = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());

            deleteItem = JOptionPane.showConfirmDialog(null, " Confirm if you want to delete item", "Warning", JOptionPane.YES_NO_OPTION);
            if (deleteItem == JOptionPane.YES_NO_OPTION) {
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn, username, password);
                pst = sqlConn.prepareStatement("delete from Payroll where Payroll_ID =?");

                pst.setInt(1, Payroll_ID);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Recorded delete");
                upDateDB();

                txtEmp_ID.setText("");
                txtJob_ID.setText("");
                txtSalary_ID.setText("");
                txtReport.setText("");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Job_Dept.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (SQLException ex) {
            System.err.println(ex);
        }
    }//GEN-LAST:event_txtDeleteActionPerformed

    private void txtPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrintActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("PayRoll");
        MessageFormat footer = new MessageFormat("Page [0, number, integer]");

        try {
            txtPayroll_Table.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("No Printer found", e.getMessage());
        }
    }//GEN-LAST:event_txtPrintActionPerformed

    private void txtResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResetActionPerformed
        // TODO add your handling code here:
        txtPay_ID.setText("");
        txtEmp_ID.setText("");
        txtJob_ID.setText("");
        txtSalary_ID.setText("");
        txtReport.setText("");
    }//GEN-LAST:event_txtResetActionPerformed

    private void txtAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddNewActionPerformed
        // TODO add your handling code here:
        if (txtPay_ID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Payroll ID is empty");
            return;
        }
        if (txtEmp_ID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Employee ID is empty");
            return;
        }
        if (txtJob_ID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Job ID is empty");
            return;
        }
        if (txtSalary_ID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Salay ID is empty");
            return;
        }
        if (txtReport.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Report ID is empty");
            return;
        }

        boolean flag = false;
        //pay ID Exist
        try {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("select count(*) from payroll where Payroll_ID = " + txtPay_ID.getText());
            rs = pst.executeQuery();
            rs.next();
            if (rs.getInt(1) > 0) {
                flag = true;
                JOptionPane.showMessageDialog(this, "Pay id exists");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Payroll.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Emp_ID
        try {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("select count(*) from employee where emp_ID = " + txtEmp_ID.getText());
            rs = pst.executeQuery();
            rs.next();
            if (rs.getInt(1) == 0) {
                JOptionPane.showMessageDialog(this, "Emp id doesn't exist");
                flag = true;
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Payroll.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Job_ID
        try {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("select count(*) from job_department where Job_ID = " + txtJob_ID.getText());
            rs = pst.executeQuery();
            rs.next();
            if (rs.getInt(1) == 0) {
                JOptionPane.showMessageDialog(this, "Job id doesn't exist");
                flag = true;
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Payroll.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Salary_ID
        try {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("select count(*) from salary where Salary_ID = " + txtSalary_ID.getText());
            rs = pst.executeQuery();
            rs.next();
            if (rs.getInt(1) == 0) {
                JOptionPane.showMessageDialog(this, "Salary id doesn't exist");
                flag = true;
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Payroll.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (flag) return;

        // Data insert or Add new
        try {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("insert into Payroll(Payroll_ID,Emp_ID,Job_ID,Salary_ID," + "Report)value(?,?,?,?,?)");

            pst.setString(1, txtPay_ID.getText());
            pst.setString(2, txtEmp_ID.getText());
            pst.setString(3, txtJob_ID.getText());
            pst.setString(4, txtSalary_ID.getText());
            pst.setString(5, txtReport.getText());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record Added");
            upDateDB();

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtAddNewActionPerformed

    private void txtUpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateDataActionPerformed
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) txtPayroll_Table.getModel();
        int SelectedRows = txtPayroll_Table.getSelectedRow();
        try {
            Payroll_ID = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("update Payroll set Emp_ID=?,Job_ID=?,Salary_ID=?,"
                + "Report=? where Payroll_ID =?");

            pst.setString(1, txtEmp_ID.getText());
            pst.setString(2, txtJob_ID.getText());
            pst.setString(3, txtSalary_ID.getText());
            pst.setString(4, txtReport.getText());
            pst.setString(5, String.valueOf(Payroll_ID));

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record updated");
            upDateDB();

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (MySQLIntegrityConstraintViolationException ex) {
            // show duplicate jobid insert error dialog
            JOptionPane.showMessageDialog(this, "Doesn not Match ID", "ID ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtUpdateDataActionPerformed

    private void txtEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmployeeActionPerformed
        // TODO add your handling code here:
        Employee d = new Employee();
        this.setVisible(false);
        d.setVisible(true);
    }//GEN-LAST:event_txtEmployeeActionPerformed

    private void txtJob_DeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJob_DeptActionPerformed
        // TODO add your handling code here:
        Job_Dept d = new Job_Dept();
        this.setVisible(false);
        d.setVisible(true);
    }//GEN-LAST:event_txtJob_DeptActionPerformed

    private void txtSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalaryActionPerformed
        // TODO add your handling code here:
        Salary d = new Salary();
        this.setVisible(false);
        d.setVisible(true);
    }//GEN-LAST:event_txtSalaryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payroll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton txtAddNew3;
    private javax.swing.JButton txtDelete3;
    private javax.swing.JTextField txtEmp_ID;
    private javax.swing.JButton txtEmployee;
    private javax.swing.JButton txtExit;
    private javax.swing.JButton txtJob_Dept;
    private javax.swing.JTextField txtJob_ID;
    private javax.swing.JTextField txtPay_ID;
    private javax.swing.JTable txtPayroll_Table;
    private javax.swing.JButton txtPrint3;
    private javax.swing.JTextArea txtReport;
    private javax.swing.JButton txtReset3;
    private javax.swing.JButton txtSalary;
    private javax.swing.JTextField txtSalary_ID;
    private javax.swing.JButton txtUpdateData3;
    // End of variables declaration//GEN-END:variables
}
