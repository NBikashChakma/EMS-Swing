
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


import com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Bikash
 */
public class Employee extends javax.swing.JFrame {

    private static final String username = "root";
   private static final String password = "3434!Natun?!%@$#";
   private static final String dataConn = "jdbc:mysql://localhost:3306/ems31?autoReconnect=true&useSSL=false";
   
   Connection sqlConn = null;
   PreparedStatement pst = null;
   ResultSet rs = null;
   int q, i, Emp_ID, deleteItem;
   DefaultTableModel d;
   
    public Employee() {
        initComponents();
        upDateDB();
    }
     //**************************************FUNCTION START*******************************************************//
      public void upDateDB()
      {
              try
              {
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);        
                pst = sqlConn.prepareStatement("select * from employee");
                
                rs = pst.executeQuery();
                ResultSetMetaData stData = rs.getMetaData();
                
                q = stData.getColumnCount();
                
                DefaultTableModel RecordTable = (DefaultTableModel)txtEmployee_Table.getModel();
                        RecordTable.setRowCount(0);
                        
                        while(rs.next()){
                            Vector columnData = new Vector();
                            
                            for(i = 1;i <= q; i++)
                            {
                                
                                columnData.add(rs.getString("Emp_ID"));
                                columnData.add(rs.getString("Emp_name"));
                                columnData.add(rs.getString("Nid_No"));
                                columnData.add(rs.getString("Gender"));
                                columnData.add(rs.getString("Age"));
                                columnData.add(rs.getString("Position"));
                                columnData.add(rs.getString("Blood_Group"));
                                columnData.add(rs.getString("Contact"));
                                columnData.add(rs.getString("Email"));
                            }
                            RecordTable.addRow(columnData);
                        }
                    }
                    catch (Exception ex){
                       JOptionPane.showMessageDialog(null, ex);
                    }
              }
    
    
     //**************************************FUNCTION END*******************************************************//

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtEmployeeID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtBloodGroup = new javax.swing.JComboBox<>();
        txtGender = new javax.swing.JComboBox<>();
        txtNID = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPosition = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        txtUpdateData = new javax.swing.JButton();
        txtAddNew = new javax.swing.JButton();
        txtReset = new javax.swing.JButton();
        txtPrint = new javax.swing.JButton();
        txtExit = new javax.swing.JButton();
        txtDelete = new javax.swing.JButton();
        txtJob_Dept1 = new javax.swing.JButton();
        txtSalary1 = new javax.swing.JButton();
        txtPayroll1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEmployee_Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employee Table");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Emp_ID (P.k) ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NID");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Age ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Gender ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Blood-Group ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Position ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Contact(phone) ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Email ");

        txtEmployeeID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtAge.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtContact.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtBloodGroup.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "O−\t", "O+\t", "A−\t", "A+\t", "B−\t", "B+\t", "AB−\t", "AB+" }));

        txtGender.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female" }));

        txtNID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Name ");

        txtPosition.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Operations manager", "Accountant ", "bookkeeper", "controller", "Office manager", "Receptionist", "supervisor", "lead person", "Marketing manager", "Purchasing manager", "Professional staff" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtContact)
                        .addComponent(txtName)
                        .addComponent(txtEmployeeID)
                        .addComponent(txtNID, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtNID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtPosition)
                        .addGap(2, 2, 2)))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jPanel3.setBackground(new java.awt.Color(51, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));

        txtUpdateData.setBackground(new java.awt.Color(0, 0, 255));
        txtUpdateData.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtUpdateData.setForeground(new java.awt.Color(255, 255, 255));
        txtUpdateData.setText("Update Data");
        txtUpdateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateDataActionPerformed(evt);
            }
        });

        txtAddNew.setBackground(new java.awt.Color(0, 0, 255));
        txtAddNew.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtAddNew.setForeground(new java.awt.Color(255, 255, 255));
        txtAddNew.setText("Add New");
        txtAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddNewActionPerformed(evt);
            }
        });

        txtReset.setBackground(new java.awt.Color(0, 0, 255));
        txtReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtReset.setForeground(new java.awt.Color(255, 255, 255));
        txtReset.setText("Reset");
        txtReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResetActionPerformed(evt);
            }
        });

        txtPrint.setBackground(new java.awt.Color(0, 0, 255));
        txtPrint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtPrint.setForeground(new java.awt.Color(255, 255, 255));
        txtPrint.setText("Print");
        txtPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrintActionPerformed(evt);
            }
        });

        txtExit.setBackground(new java.awt.Color(255, 51, 51));
        txtExit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtExit.setForeground(new java.awt.Color(255, 255, 255));
        txtExit.setText("Exit");
        txtExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExitActionPerformed(evt);
            }
        });

        txtDelete.setBackground(new java.awt.Color(0, 0, 255));
        txtDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDelete.setForeground(new java.awt.Color(255, 255, 255));
        txtDelete.setText("Delete");
        txtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeleteActionPerformed(evt);
            }
        });

        txtJob_Dept1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtJob_Dept1.setText("Job-Dept");
        txtJob_Dept1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJob_Dept1ActionPerformed(evt);
            }
        });

        txtSalary1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtSalary1.setText("Salay");
        txtSalary1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalary1ActionPerformed(evt);
            }
        });

        txtPayroll1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtPayroll1.setText("Payroll");
        txtPayroll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPayroll1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAddNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtJob_Dept1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSalary1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUpdateData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPayroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(txtPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtReset, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtExit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUpdateData, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReset, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtJob_Dept1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSalary1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPayroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtExit, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("EMPLOYEE");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        txtEmployee_Table.setBackground(new java.awt.Color(51, 153, 255));
        txtEmployee_Table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtEmployee_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Emp_ID", "Name", "Nid_No", "Gender", "Age", "Position", "Blood_Group", "Contact", "Email"
            }
        ));
        txtEmployee_Table.setRowHeight(25);
        txtEmployee_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEmployee_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(txtEmployee_Table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1350, 690));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
 private JFrame frame;
    private void txtExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExitActionPerformed
        // TODO add your handling code here:
              frame = new JFrame("Exit");
     if(JOptionPane.showConfirmDialog(frame, "confirm if you want to exit","Employee Management System",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
     {
         //System.exit(0);
         Admin_Login L = new Admin_Login();  
        this.setVisible(false);
        L.setVisible(true);
     } 
    }//GEN-LAST:event_txtExitActionPerformed

    private void txtAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddNewActionPerformed
        // TODO add your handling code here:
        if (txtEmployeeID.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "EmployeeID is empty");
            return;
        }
        if (txtName.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Employee Name is empty");
            return;
        }
        if (txtNID.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "NID is empty");
            return;
        }
        if (txtGender.getSelectedItem().toString().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Gender is empty");
            return;
        }
        if (txtAge.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Age is empty");
            return;
        }
        if (txtPosition.getSelectedItem().toString().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Job Position is empty");
            return;
        }
          if (txtBloodGroup.getSelectedItem().toString().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Blood Group is empty");
            return;
        }
        if (txtContact.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Contact is empty");
            return;
        }
        if (txtEmail.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Email is empty");
            return;
        }
          boolean flag = false;
        //Employee ID Exist
        try {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("select count(*) from employee where Emp_ID = " + txtEmployeeID.getText());
            rs = pst.executeQuery();
            rs.next();
            if (rs.getInt(1) > 0) {
               flag = true;
                JOptionPane.showMessageDialog(this, "Employee id exists");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
         //Nid_No Exist
        try {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("select count(*) from employee where Nid_No = " + txtNID.getText());
            rs = pst.executeQuery();
            rs.next();
            if (rs.getInt(1) > 0) {
               flag = true;
                JOptionPane.showMessageDialog(this, "Nid Already exists");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
         //Contact Exist
        try {
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            pst = sqlConn.prepareStatement("select count(*) from employee where Contact = " + txtContact.getText());
            rs = pst.executeQuery();
            rs.next();
            if (rs.getInt(1) > 0) {
               flag = true;
                JOptionPane.showMessageDialog(this, "Contact Already exists");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        if (flag) return;
        // Data insert or Add new
        try
              {
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);        
                pst = sqlConn.prepareStatement("insert into employee(Emp_ID,Emp_name,Nid_No,Gender,Age,Position,Blood_Group,Contact,Email)value(?,?,?,?,?,?,?,?,?)");
                
                pst.setString(1, txtEmployeeID.getText());
                pst.setString(2, txtName.getText());
                pst.setString(3, txtNID.getText());
                pst.setString(4, txtGender.getSelectedItem().toString());
                pst.setString(5, txtAge.getText());
                pst.setString(6, txtPosition.getSelectedItem().toString());
                pst.setString(7, txtBloodGroup.getSelectedItem().toString());
                pst.setString(8, txtContact.getText());
                pst.setString(9, txtEmail.getText());
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Added");
                upDateDB();
                
              }
        catch(ClassNotFoundException ex){
        java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
                
        }
//        catch (MySQLIntegrityConstraintViolationException ex) {
//            // show duplicate jobid insert error dialog
//            System.out.println(ex);
//            if(ex.toString().contains("PRIMARY"))
//            JOptionPane.showMessageDialog(this, " already exists!", "Employee ID ", JOptionPane.ERROR_MESSAGE);
//        }
        catch(SQLException ex){
           java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_txtAddNewActionPerformed

    private void txtUpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateDataActionPerformed
        // TODO add your handling code here:
           DefaultTableModel RecordTable = (DefaultTableModel)txtEmployee_Table.getModel();
        int SelectedRows = txtEmployee_Table.getSelectedRow();
        try
              {
                Emp_ID = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());  
                Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password);        
                pst = sqlConn.prepareStatement("update employee set Emp_name=?,Nid_No=?,Gender=?,Age=?,Position=?,Blood_Group=?,Contact=?,"
                        + "Email=? where Emp_ID =?");
                
                pst.setString(1, txtName.getText());
                pst.setString(2, txtNID.getText());
                pst.setString(3, txtGender.getSelectedItem().toString());
                pst.setString(4, txtAge.getText());
                pst.setString(5, txtPosition.getSelectedItem().toString());
                pst.setString(6, txtBloodGroup.getSelectedItem().toString());
                pst.setString(7, txtContact.getText());
                pst.setString(8, txtEmail.getText());
                pst.setString(9, String.valueOf(Emp_ID));
                
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record updated");
                upDateDB();
                
              }
        catch(ClassNotFoundException ex){
        java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
                
        } catch(SQLException ex){
           java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_txtUpdateDataActionPerformed

    private void txtPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrintActionPerformed
        // TODO add your handling code here:
           MessageFormat header = new MessageFormat("Employee Management System");
        MessageFormat footer = new MessageFormat("Page [0, number, integer]");
        
        try
        {
            txtEmployee_Table.print(JTable.PrintMode.FIT_WIDTH,header, footer);
        }
        catch(java.awt.print.PrinterException e)
        {
            System.err.format("No Printer found", e.getMessage());
        }
    }//GEN-LAST:event_txtPrintActionPerformed

    private void txtResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResetActionPerformed
        // TODO add your handling code here:
        txtEmployeeID.setText("");
        txtName.setText("");
        txtNID.setText("");
        txtGender.setSelectedIndex(-1);
        txtAge.setText("");
        txtPosition.setSelectedIndex(-1);
       txtBloodGroup.setSelectedIndex(-1);
       txtContact.setText("");
        txtEmail.setText("");
        
    }//GEN-LAST:event_txtResetActionPerformed

    private void txtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeleteActionPerformed
        // TODO add your handling code here:
            DefaultTableModel RecordTable = (DefaultTableModel)txtEmployee_Table.getModel();
         int SelectedRows = txtEmployee_Table.getSelectedRow();
         
         try
         {
             Emp_ID = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());
             
             deleteItem = JOptionPane.showConfirmDialog(null," Confirm if you want to delete item","Warning",JOptionPane.YES_NO_OPTION);
             if(deleteItem == JOptionPane.YES_NO_OPTION)
             {
                 Class.forName("com.mysql.jdbc.Driver");
                sqlConn = DriverManager.getConnection(dataConn,username,password); 
                pst = sqlConn.prepareStatement("delete from employee where Emp_ID =?");
                
                pst.setInt(1, Emp_ID);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Recorded delete");
                upDateDB();
                
                        txtName.setText("");
                        txtNID.setText("");
                        txtGender.getSelectedItem().toString();
                        txtAge.setText("");
                        txtPosition.getSelectedItem().toString();
                        txtBloodGroup.getSelectedItem().toString();
                        txtContact.setText("");
                        txtEmail.setText(""); 
             }
         }
         
        catch(ClassNotFoundException ex){
        java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
                
        }  catch (MySQLIntegrityConstraintViolationException ex) {
            // show duplicate jobid insert error dialog
            JOptionPane.showMessageDialog(this, "Payroll  References Emp_ID ", "References Emp_ID ", JOptionPane.ERROR_MESSAGE);
        }catch(SQLException ex){
            System.err.println(ex);
        }
    }//GEN-LAST:event_txtDeleteActionPerformed

    private void txtEmployee_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmployee_TableMouseClicked
        // TODO add your handling code here:

        DefaultTableModel RecordTable = (DefaultTableModel)txtEmployee_Table.getModel();
        int SelectedRows = txtEmployee_Table.getSelectedRow();

        d = (DefaultTableModel)txtEmployee_Table.getModel();
        int selectIndex = txtEmployee_Table.getSelectedRow();

        txtName.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        txtNID.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
        txtGender.setSelectedItem(d.getValueAt(selectIndex, 3).toString());
        txtAge.setText(RecordTable.getValueAt(SelectedRows, 4).toString());
        txtPosition.setSelectedItem(d.getValueAt(selectIndex, 5).toString());
        txtBloodGroup.setSelectedItem(d.getValueAt(selectIndex, 6).toString());
        txtContact.setText(RecordTable.getValueAt(SelectedRows, 7).toString());
        txtEmail.setText(RecordTable.getValueAt(SelectedRows, 8).toString());
    }//GEN-LAST:event_txtEmployee_TableMouseClicked

    private void txtJob_Dept1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJob_Dept1ActionPerformed
        // TODO add your handling code here:
         Job_Dept d = new Job_Dept();
        this.setVisible(false);
        d.setVisible(true);
    }//GEN-LAST:event_txtJob_Dept1ActionPerformed

    private void txtSalary1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalary1ActionPerformed
        // TODO add your handling code here:
        Salary d = new Salary();
        this.setVisible(false);
        d.setVisible(true);
    }//GEN-LAST:event_txtSalary1ActionPerformed

    private void txtPayroll1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPayroll1ActionPerformed
        // TODO add your handling code here:
        Payroll d = new Payroll();
        this.setVisible(false);
        d.setVisible(true);
    }//GEN-LAST:event_txtPayroll1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton txtAddNew;
    private javax.swing.JTextField txtAge;
    private javax.swing.JComboBox<String> txtBloodGroup;
    private javax.swing.JTextField txtContact;
    private javax.swing.JButton txtDelete;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTable txtEmployee_Table;
    private javax.swing.JButton txtExit;
    private javax.swing.JComboBox<String> txtGender;
    private javax.swing.JButton txtJob_Dept1;
    private javax.swing.JTextField txtNID;
    private javax.swing.JTextField txtName;
    private javax.swing.JButton txtPayroll1;
    private javax.swing.JComboBox<String> txtPosition;
    private javax.swing.JButton txtPrint;
    private javax.swing.JButton txtReset;
    private javax.swing.JButton txtSalary1;
    private javax.swing.JButton txtUpdateData;
    // End of variables declaration//GEN-END:variables
}
